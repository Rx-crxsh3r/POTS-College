package fm;

import Classes.FinanceManager;
import Classes.item;
import java.util.List;

public class CheckStockFrame extends javax.swing.JFrame {

    private FinanceManager fm;

    // Constructor to initialize FinanceManager
    public CheckStockFrame(FinanceManager fm) {
        this.fm = fm; // Pass the FinanceManager instance
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        itemIDTextField = new javax.swing.JTextField();
        checkStockButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockDetailsLabel = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Enter Item ID:");

        checkStockButton.setText("Check Stock");
        checkStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStockButtonActionPerformed(evt);
            }
        });

        stockDetailsLabel.setColumns(20);
        stockDetailsLabel.setRows(5);
        jScrollPane1.setViewportView(stockDetailsLabel);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Check Stock Status");

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(itemIDTextField)
                .addGap(18, 18, 18)
                .addComponent(checkStockButton)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(closeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(itemIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkStockButton))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(closeButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStockButtonActionPerformed
    String itemID = itemIDTextField.getText().trim();

    if (itemID.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please enter an Item ID.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Fetch stock status
        List<item> stockList = FinanceManager.checkStockStatus(itemID);
        boolean found = false;
        for (item item : stockList) {
            if (item.getItemCode().equalsIgnoreCase(itemID)) {
                // Format the item details
                String itemDetails = "Item Code: " + item.getItemCode() + "\n"
                                   + "Item Name: " + item.getItemName() + "\n"
                                   + "Supplier ID: " + item.getSupplierId() + "\n"
                                   + "Description: " + item.getDescription() + "\n"
                                   + "Category: " + item.getCategory() + "\n"
                                   + "Price: $" + item.getPrice() + "\n"
                                   + "Quantity In Stock: " + item.getQuantityInStock() + "\n"
                                   + "Reorder Level: " + item.getReorderLevel() + "\n"
                                   + "Unit Of Measurement: " + item.getUnit() + "\n"
                                   + "Status: " + item.getStatus() + "\n"
                                   + "Date Added: " + item.getDateAdded();

                stockDetailsLabel.setText(itemDetails); // Display the details
                found = true;
                break;
            }
        }
        if (!found) {
            stockDetailsLabel.setText("No stock information found for Item ID: " + itemID);
        }
    } catch (Exception ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "An error occurred: " + ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }               // TODO add your handling code here:
    }//GEN-LAST:event_checkStockButtonActionPerformed

    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
    closeButton.addActionListener(e -> dispose());       
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        // Initialize FinanceManager
        FinanceManager fm = new FinanceManager("PO.txt", "items.txt", "Supplier.txt");
        java.awt.EventQueue.invokeLater(() -> {
            new CheckStockFrame(fm).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkStockButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField itemIDTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea stockDetailsLabel;
    // End of variables declaration//GEN-END:variables
}
